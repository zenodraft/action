"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.metadata_validate_command = void 0;
const validate_1 = require("../../lib/metadata/validate");
const options_1 = require("../../lib/helpers/options");
const tokens_help_text_1 = require("../../lib/helpers/tokens-help-text");
const commander = require("commander");
const metadata_validate_command = () => {
    return new commander.Command()
        .name('validate')
        .arguments('<local_filename>')
        .description('Validate the metadata from <local_filename>.', {
        local_filename: 'filename of file holding the metadata in Zenodo metadata format'
    })
        .option(...options_1.verboseOption)
        .action((local_filename, opts) => {
        const { verbose } = opts;
        try {
            validate_1.metadata_validate(local_filename, verbose);
        }
        catch (e) {
            console.error(e.message);
            process.exit(-1);
        }
    })
        .addHelpText('after', tokens_help_text_1.tokensHelpText);
};
exports.metadata_validate_command = metadata_validate_command;
//# sourceMappingURL=validate.js.map